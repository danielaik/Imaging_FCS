<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>imagej.new_imfcs</groupId>
    <artifactId>ImagingFCS</artifactId>
    <version>2_0</version>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.2</version> <!-- Use the latest available version -->
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>fiji.plugin.imaging_fcs.imfcs.ImagingFCS</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.0</version> <!-- use latest or a specific version as necessary -->
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>fiji.plugin.imaging_fcs.imfcs.ImagingFCS</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/cpp/build/gpufit/Release</directory>
                <targetPath>libs/gpufit</targetPath>
                <includes>
                    <include>agpufit.dll</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/cpp/build/cameras/sdk2/Release</directory>
                <targetPath>libs/camera_readout/sdk2</targetPath>
                <includes>
                    <include>JNIAndorSDK2v3.dll</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/cpp/build/cameras/sdk3/Release</directory>
                <targetPath>libs/camera_readout/sdk3</targetPath>
                <includes>
                    <include>JNIAndorSDK3v2.dll</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/cpp/build/cameras/dcam/Release</directory>
                <targetPath>libs/camera_readout/dcam</targetPath>
                <includes>
                    <include>JNIHamamatsuDCAMsdk4.dll</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/cpp/build/cameras/pvcam/Release</directory>
                <targetPath>libs/camera_readout/pvcam</targetPath>
                <includes>
                    <include>JNIPhotometricsPVCAMsdk.dll</include>
                </includes>
            </resource>
        </resources>
    </build>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.test.skip>true</maven.test.skip>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.6.0</junit.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.pjfanning</groupId>
            <artifactId>excel-streaming-reader</artifactId>
            <version>5.0.2</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1.1</version>
        </dependency>

        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>ij</artifactId>
            <version>1.53f</version>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.2</version>
        </dependency>
    </dependencies>

    <!-- This part is used to create the header file and/or compile the C++/CUDA libraries if needed -->
    <profiles>
        <profile>
            <id>generate-jni-headers</id>
            <!-- This profile activates when generateJniHeaders is true -->
            <activation>
                <property>
                    <name>generateJniHeaders</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <path id="compile.classpath">
                                            <path path="${project.build.directory}/classes" />
                                            <fileset dir="${project.build.directory}/dependencies">
                                                <include name="**/*.jar" />
                                            </fileset>
                                        </path>
                                        <property name="compile.classpath" refid="compile.classpath" />

                                        <exec executable="javac">
                                            <arg value="-classpath" />
                                            <arg
                                                value="${project.build.directory}/classes${path.separator}${compile.classpath}" />
                                            <arg value="-d" />
                                            <arg value="${project.build.directory}/classes" />
                                            <arg value="-h" />
                                            <arg value="src/main/cpp/gpufit" />
                                            <arg
                                                value="src/main/java/fiji/plugin/imaging_fcs/gpufit/Gpufit.java" />
                                        </exec>

                                        <exec executable="javac">
                                            <arg value="-classpath" />
                                            <arg
                                                value="${project.build.directory}/classes${path.separator}${compile.classpath}" />
                                            <arg value="-d" />
                                            <arg value="${project.build.directory}/classes" />
                                            <arg value="-h" />
                                            <arg value="src/main/cpp/gpufit" />
                                            <arg
                                                value="src/main/java/fiji/plugin/imaging_fcs/new_imfcs/gpu/GpuParameters.java" />
                                        </exec>

                                        <exec executable="javac">
                                            <arg value="-classpath" />
                                            <arg
                                                value="${project.build.directory}/classes${path.separator}${compile.classpath}" />
                                            <arg value="-d" />
                                            <arg value="${project.build.directory}/classes" />
                                            <arg value="-h" />
                                            <arg value="src/main/cpp/gpufit" />
                                            <arg
                                                value="src/main/java/fiji/plugin/imaging_fcs/new_imfcs/gpu/GpuCorrelator.java" />
                                        </exec>

                                        <exec executable="javac">
                                            <arg value="-classpath" />
                                            <arg
                                                value="${project.build.directory}/classes${path.separator}${compile.classpath}" />
                                            <arg value="-d" />
                                            <arg value="${project.build.directory}/classes" />
                                            <arg value="-h" />
                                            <arg
                                                value="src/main/cpp/cameras/sdk2/dependencies/include" />
                                            <arg
                                                value="src/main/java/fiji/plugin/imaging_fcs/directCameraReadout/andorsdk2v3/AndorSDK2v3.java" />
                                        </exec>

                                        <exec executable="javac">
                                            <arg value="-classpath" />
                                            <arg
                                                value="${project.build.directory}/classes${path.separator}${compile.classpath}" />
                                            <arg value="-d" />
                                            <arg value="${project.build.directory}/classes" />
                                            <arg value="-h" />
                                            <arg
                                                value="src/main/cpp/cameras/sdk3/dependencies/include" />
                                            <arg
                                                value="src/main/java/fiji/plugin/imaging_fcs/directCameraReadout/andorsdk3v2/AndorSDK3v2.java" />
                                        </exec>

                                        <exec executable="javac">
                                            <arg value="-classpath" />
                                            <arg
                                                value="${project.build.directory}/classes${path.separator}${compile.classpath}" />
                                            <arg value="-d" />
                                            <arg value="${project.build.directory}/classes" />
                                            <arg value="-h" />
                                            <arg
                                                value="src/main/cpp/cameras/dcam/dependencies/include" />
                                            <arg
                                                value="src/main/java/fiji/plugin/imaging_fcs/directCameraReadout/hamadcamsdk4/Hamamatsu_DCAM_SDK4.java" />
                                        </exec>

                                        <exec executable="javac">
                                            <arg value="-classpath" />
                                            <arg
                                                value="${project.build.directory}/classes${path.separator}${compile.classpath}" />
                                            <arg value="-d" />
                                            <arg value="${project.build.directory}/classes" />
                                            <arg value="-h" />
                                            <arg
                                                value="src/main/cpp/cameras/pvcam/dependencies/include" />
                                            <arg
                                                value="src/main/java/fiji/plugin/imaging_fcs/directCameraReadout/pvcamsdk/Photometrics_PVCAM_SDK.java" />
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>compile_libs</id>
            <activation>
                <property>
                    <name>compileLibs</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>cmake-configure</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>cmake</executable>
                                    <workingDirectory>${project.basedir}/src/main/cpp</workingDirectory>
                                    <arguments>
                                        <argument>-Bbuild</argument>
                                        <argument>-G</argument>
                                        <argument>Visual Studio 17 2022</argument>
                                        <argument>-A</argument>
                                        <argument>x64</argument>
                                        <argument>-DCMAKE_BUILD_TYPE=Release</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>